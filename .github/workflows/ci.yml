# Continuous Integration"
# - Unit Tests
# - Code Coverage
# - Auto Bump version
# - Publish to [Test] PyPI

name: Continuous Integration
on: [push, pull_request]
permissions:
  contents: write
env:
  POETRY_VERSION: 1.7.0

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13.0-alpha.1"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry ${{ env.POETRY_VERSION }}
        run: pipx install poetry==${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install
      - name: Install coverage
        run: poetry add coverage
      - name: Run tests
        run: poetry run coverage run --branch --omit tests.py -m unittest -v tests.py
      - name: Generate coverage report
        run: poetry run coverage xml
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  bump: # Bump prerelease version if test ran and not a tagged commit
    needs: test
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'refs/heads/main') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Poetry ${{ env.POETRY_VERSION }}
        run: pipx install poetry==${{ env.POETRY_VERSION }}
      - name: Bump version
        run: poetry version prerelease
      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
      - name: Commit version
        run: git commit -am "ðŸ”– Bump version"
      - name: Push changes
        run: git push origin main
  publish:
    needs: bump
    runs-on: ubuntu-latest
    environment: publish
    permissions:
      id-token: write
    # Only run if on the main branch
    if: always() && ${{ contains(github.ref, 'refs/heads/main') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Poetry ${{ env.POETRY_VERSION }}
        run: pipx install poetry==${{ env.POETRY_VERSION }}
      - name: Build package
        run: poetry build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
